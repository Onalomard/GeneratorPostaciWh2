// <auto-generated />
using GeneratorPostaciWh2.Encje;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeneratorPostaciWh2.Migrations
{
    [DbContext(typeof(GeneratorContext))]
    [Migration("20250416160031_NullOpisPancerza")]
    partial class NullOpisPancerza
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Postac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("A")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("K")
                        .HasColumnType("int");

                    b.Property<int>("Odp")
                        .HasColumnType("int");

                    b.Property<int>("Ogd")
                        .HasColumnType("int");

                    b.Property<int>("Pp")
                        .HasColumnType("int");

                    b.Property<int>("ProfesjaId")
                        .HasColumnType("int");

                    b.Property<int>("RasaId")
                        .HasColumnType("int");

                    b.Property<int>("Sw")
                        .HasColumnType("int");

                    b.Property<int>("US")
                        .HasColumnType("int");

                    b.Property<int>("WW")
                        .HasColumnType("int");

                    b.Property<int>("Zr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesjaId");

                    b.HasIndex("RasaId");

                    b.ToTable("Postacie");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Profesja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("A")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("K")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Odp")
                        .HasColumnType("int");

                    b.Property<int>("Ogd")
                        .HasColumnType("int");

                    b.Property<int>("Sw")
                        .HasColumnType("int");

                    b.Property<int>("Us")
                        .HasColumnType("int");

                    b.Property<int>("Ww")
                        .HasColumnType("int");

                    b.Property<int>("Zr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profesje");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Rasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("K")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Odp")
                        .HasColumnType("int");

                    b.Property<int>("Ogd")
                        .HasColumnType("int");

                    b.Property<int>("Sw")
                        .HasColumnType("int");

                    b.Property<int>("Us")
                        .HasColumnType("int");

                    b.Property<int>("Ww")
                        .HasColumnType("int");

                    b.Property<int>("Zr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rasy");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Umiejetnosc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Umiejetnosci");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Wyposazenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Wyposazenie");

                    b.HasDiscriminator<string>("Typ").HasValue("Wyposazenie");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Zdolnosc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zdolnosci");
                });

            modelBuilder.Entity("PostacUmiejetnosc", b =>
                {
                    b.Property<int>("PostacieId")
                        .HasColumnType("int");

                    b.Property<int>("UmiejetnosciId")
                        .HasColumnType("int");

                    b.HasKey("PostacieId", "UmiejetnosciId");

                    b.HasIndex("UmiejetnosciId");

                    b.ToTable("PostacUmiejetnosc");
                });

            modelBuilder.Entity("PostacWyposazenie", b =>
                {
                    b.Property<int>("PostacieId")
                        .HasColumnType("int");

                    b.Property<int>("WyposazenieId")
                        .HasColumnType("int");

                    b.HasKey("PostacieId", "WyposazenieId");

                    b.HasIndex("WyposazenieId");

                    b.ToTable("PostacWyposazenie");
                });

            modelBuilder.Entity("PostacZdolnosc", b =>
                {
                    b.Property<int>("PostacieId")
                        .HasColumnType("int");

                    b.Property<int>("ZdolnosciId")
                        .HasColumnType("int");

                    b.HasKey("PostacieId", "ZdolnosciId");

                    b.HasIndex("ZdolnosciId");

                    b.ToTable("PostacZdolnosc");
                });

            modelBuilder.Entity("ProfesjaUmiejetnosc", b =>
                {
                    b.Property<int>("ProfesjeId")
                        .HasColumnType("int");

                    b.Property<int>("UmiejetnosciId")
                        .HasColumnType("int");

                    b.HasKey("ProfesjeId", "UmiejetnosciId");

                    b.HasIndex("UmiejetnosciId");

                    b.ToTable("ProfesjaUmiejetnosc");
                });

            modelBuilder.Entity("ProfesjaWyposazenie", b =>
                {
                    b.Property<int>("ProfesjeId")
                        .HasColumnType("int");

                    b.Property<int>("WyposazenieId")
                        .HasColumnType("int");

                    b.HasKey("ProfesjeId", "WyposazenieId");

                    b.HasIndex("WyposazenieId");

                    b.ToTable("ProfesjaWyposazenie");
                });

            modelBuilder.Entity("ProfesjaZdolnosc", b =>
                {
                    b.Property<int>("ProfesjeId")
                        .HasColumnType("int");

                    b.Property<int>("ZdolnosciId")
                        .HasColumnType("int");

                    b.HasKey("ProfesjeId", "ZdolnosciId");

                    b.HasIndex("ZdolnosciId");

                    b.ToTable("ProfesjaZdolnosc");
                });

            modelBuilder.Entity("RasaUmiejetnosc", b =>
                {
                    b.Property<int>("RasyId")
                        .HasColumnType("int");

                    b.Property<int>("UmiejetnosciId")
                        .HasColumnType("int");

                    b.HasKey("RasyId", "UmiejetnosciId");

                    b.HasIndex("UmiejetnosciId");

                    b.ToTable("RasaUmiejetnosc");
                });

            modelBuilder.Entity("RasaZdolnosc", b =>
                {
                    b.Property<int>("RasyId")
                        .HasColumnType("int");

                    b.Property<int>("ZdolnosciId")
                        .HasColumnType("int");

                    b.HasKey("RasyId", "ZdolnosciId");

                    b.HasIndex("ZdolnosciId");

                    b.ToTable("RasaZdolnosc");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Bron", b =>
                {
                    b.HasBaseType("GeneratorPostaciWh2.Encje.Wyposazenie");

                    b.PrimitiveCollection<string>("Cechy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obrazenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Broń");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Inne", b =>
                {
                    b.HasBaseType("GeneratorPostaciWh2.Encje.Wyposazenie");

                    b.HasDiscriminator().HasValue("Inne");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Pancerz", b =>
                {
                    b.HasBaseType("GeneratorPostaciWh2.Encje.Wyposazenie");

                    b.Property<string>("Lokalizacje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PunktyZbroji")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Pancerz");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Postac", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Profesja", "Profesja")
                        .WithMany("Postacie")
                        .HasForeignKey("ProfesjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Rasa", "Rasa")
                        .WithMany("Postacie")
                        .HasForeignKey("RasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesja");

                    b.Navigation("Rasa");
                });

            modelBuilder.Entity("PostacUmiejetnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Postac", null)
                        .WithMany()
                        .HasForeignKey("PostacieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Umiejetnosc", null)
                        .WithMany()
                        .HasForeignKey("UmiejetnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PostacWyposazenie", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Postac", null)
                        .WithMany()
                        .HasForeignKey("PostacieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Wyposazenie", null)
                        .WithMany()
                        .HasForeignKey("WyposazenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PostacZdolnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Postac", null)
                        .WithMany()
                        .HasForeignKey("PostacieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Zdolnosc", null)
                        .WithMany()
                        .HasForeignKey("ZdolnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfesjaUmiejetnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Profesja", null)
                        .WithMany()
                        .HasForeignKey("ProfesjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Umiejetnosc", null)
                        .WithMany()
                        .HasForeignKey("UmiejetnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfesjaWyposazenie", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Profesja", null)
                        .WithMany()
                        .HasForeignKey("ProfesjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Wyposazenie", null)
                        .WithMany()
                        .HasForeignKey("WyposazenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfesjaZdolnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Profesja", null)
                        .WithMany()
                        .HasForeignKey("ProfesjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Zdolnosc", null)
                        .WithMany()
                        .HasForeignKey("ZdolnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RasaUmiejetnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Rasa", null)
                        .WithMany()
                        .HasForeignKey("RasyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Umiejetnosc", null)
                        .WithMany()
                        .HasForeignKey("UmiejetnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RasaZdolnosc", b =>
                {
                    b.HasOne("GeneratorPostaciWh2.Encje.Rasa", null)
                        .WithMany()
                        .HasForeignKey("RasyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneratorPostaciWh2.Encje.Zdolnosc", null)
                        .WithMany()
                        .HasForeignKey("ZdolnosciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Profesja", b =>
                {
                    b.Navigation("Postacie");
                });

            modelBuilder.Entity("GeneratorPostaciWh2.Encje.Rasa", b =>
                {
                    b.Navigation("Postacie");
                });
#pragma warning restore 612, 618
        }
    }
}
